// <auto-generated />
using System;
using Hospital.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital.API.DataAccess.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20240904213723_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Hospital.API.Models.Entities.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DoctorsOfficeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MedicalCenterId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MedicalSpecialtyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoctorsOfficeId");

                    b.HasIndex("MedicalCenterId");

                    b.HasIndex("MedicalSpecialtyId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Hospital.API.Models.Entities.DoctorsOffice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DoctorsOffices");
                });

            modelBuilder.Entity("Hospital.API.Models.Entities.MedicalCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MedicalCenters");
                });

            modelBuilder.Entity("Hospital.API.Models.Entities.MedicalSpecialty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MedicalSpecialities");
                });

            modelBuilder.Entity("Hospital.API.Models.Entities.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("MedicalCenterId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Patronymic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MedicalCenterId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Hospital.API.Models.Entities.Doctor", b =>
                {
                    b.HasOne("Hospital.API.Models.Entities.DoctorsOffice", "DoctorsOffice")
                        .WithMany()
                        .HasForeignKey("DoctorsOfficeId");

                    b.HasOne("Hospital.API.Models.Entities.MedicalCenter", "MedicalCenter")
                        .WithMany()
                        .HasForeignKey("MedicalCenterId");

                    b.HasOne("Hospital.API.Models.Entities.MedicalSpecialty", "MedicalSpecialty")
                        .WithMany()
                        .HasForeignKey("MedicalSpecialtyId");

                    b.Navigation("DoctorsOffice");

                    b.Navigation("MedicalCenter");

                    b.Navigation("MedicalSpecialty");
                });

            modelBuilder.Entity("Hospital.API.Models.Entities.Patient", b =>
                {
                    b.HasOne("Hospital.API.Models.Entities.MedicalCenter", "MedicalCenter")
                        .WithMany()
                        .HasForeignKey("MedicalCenterId");

                    b.Navigation("MedicalCenter");
                });
#pragma warning restore 612, 618
        }
    }
}
